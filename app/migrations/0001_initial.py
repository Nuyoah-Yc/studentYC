# Generated by Django 4.1.4 on 2022-12-26 19:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Colleges',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=32, verbose_name='学院名称')),
                ('createTime', models.CharField(db_column='create_time', max_length=19, verbose_name='建立时间')),
            ],
            options={
                'db_table': 'colleges',
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=30, verbose_name='企业名称')),
                ('phone', models.CharField(max_length=11, verbose_name='联系电话')),
                ('address', models.CharField(max_length=64, verbose_name='联系地址')),
            ],
            options={
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=30, verbose_name='岗位名称')),
                ('duty', models.CharField(max_length=125, verbose_name='岗位职责')),
                ('ask', models.CharField(max_length=125, verbose_name='岗位要求')),
                ('company', models.ForeignKey(db_column='company_id', on_delete=django.db.models.deletion.CASCADE, to='app.companies')),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='Majors',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=32, verbose_name='专业名称')),
                ('createTime', models.CharField(db_column='create_time', max_length=19, verbose_name='建立时间')),
            ],
            options={
                'db_table': 'majors',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('userName', models.CharField(db_column='user_name', max_length=32, verbose_name='用户账号')),
                ('passWord', models.CharField(db_column='pass_word', max_length=32, verbose_name='用户密码')),
                ('name', models.CharField(max_length=20, verbose_name='用户姓名')),
                ('gender', models.CharField(max_length=4, verbose_name='用户性别')),
                ('age', models.IntegerField(verbose_name='用户年龄')),
                ('phone', models.CharField(max_length=11, verbose_name='联系电话')),
                ('type', models.IntegerField(verbose_name='用户身份')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='学生学号')),
                ('address', models.CharField(max_length=64, verbose_name='学生籍贯')),
                ('birthday', models.CharField(max_length=10, verbose_name='出生日期')),
                ('status', models.IntegerField(verbose_name='学生状态')),
                ('college', models.ForeignKey(db_column='college_id', on_delete=django.db.models.deletion.CASCADE, to='app.colleges')),
                ('major', models.ForeignKey(db_column='major_id', on_delete=django.db.models.deletion.CASCADE, to='app.majors')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='app.users')),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='SendLogs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('snedTime', models.CharField(db_column='sned_time', max_length=19, verbose_name='发送时间')),
                ('status', models.IntegerField(verbose_name='处理状态')),
                ('job', models.ForeignKey(db_column='job_id', on_delete=django.db.models.deletion.CASCADE, to='app.jobs')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='app.students')),
            ],
            options={
                'db_table': 'send_logs',
            },
        ),
        migrations.CreateModel(
            name='ProjectLogs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=20, verbose_name='项目名称')),
                ('duty', models.CharField(max_length=64, verbose_name='工作职责')),
                ('detail', models.CharField(max_length=64, verbose_name='项目详情')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='app.students')),
            ],
            options={
                'db_table': 'project_logs',
            },
        ),
        migrations.CreateModel(
            name='EducationLogs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='记录编号')),
                ('name', models.CharField(max_length=20, verbose_name='学校名称')),
                ('startTime', models.CharField(max_length=10, verbose_name='开始时间')),
                ('endTime', models.CharField(max_length=10, verbose_name='结束时间')),
                ('student', models.ForeignKey(db_column='student_id', on_delete=django.db.models.deletion.CASCADE, to='app.students')),
            ],
            options={
                'db_table': 'education_logs',
            },
        ),
    ]
